plugins {
    id 'java-library'
    id "io.freefair.lombok" version "5.3.0"
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}


sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

import java.nio.file.Paths

def readVersion() {
    def versionPropsFile = file(Paths.get("src","main","resources","version.properties"))
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()

        if (versionPropsFile.canRead()) {
            versionProps.load(new FileInputStream(versionPropsFile))
        }
        versionProps['version']
    } else {
        throw new GradleException("Could not read version.properties!")
    }
}

version = readVersion()

dependencies {
    //see if this should be compileOnly
    compileOnly('org.apache.kafka:kafka-clients:2.2.1')
    // aws sdk imports.
    implementation(platform('com.amazonaws:aws-java-sdk-bom:1.11.882'))
    implementation('com.amazonaws:aws-java-sdk-core')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.6.7')
    implementation('org.slf4j:slf4j-api:1.7.25')

    //test dependencies
    testImplementation('org.apache.kafka:kafka-clients:2.2.1',
            'org.junit.jupiter:junit-jupiter-api:5.7.0',
            'org.apache.commons:commons-lang3:3.11',
            'org.mockito:mockito-inline:3.6.0')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.7.0',
            'org.apache.logging.log4j:log4j-core:2.13.1',
            'org.apache.logging.log4j:log4j-slf4j-impl:2.13.1')
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "aws-msk-iam-auth-shadow"
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

test {
    useJUnitPlatform {
        excludeTags 'incomplete'
    }
}


